trigger:
- main

pool: k8s-agents-ci

variables:
  - template: variables.yml

steps:
- task: gitversion/setup@0
  displayName: GitVersion Setup
  inputs: 
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: "Calculate version"
  inputs:
    useConfigFile: true
    configFilePath: '$(versionconfig)'

- script: echo current version is $(GitVersion.SemVer).$(GitVersion.BuildMetaData)
  displayName: 'Display calculated version'

- task: DotNetCoreCLI@2
  displayName: "Restore Packages"
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'config'
    nugetConfigPath: '$(nugetconfig)'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--no-restore --configuration "$(releaseconfig)" /p:Version=$(GitVersion.SemVer).$(GitVersion.BuildMetaData)'
    versioningScheme: 'byBuildNumber'

- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: 'test'
    projects: '$(solution)'
    publishTestResults: true
    arguments: '--no-build --configuration $(releaseconfig) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: 'Pack NuGet Package'
  inputs:
    command: 'pack'
    packagesToPush: '$(solution)'
    arguments: '--configuration "$(releaseconfig)" /p:Version=$(GitVersion.SemVer).$(GitVersion.BuildMetaData)'
    outputDir: '$(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Nuget Push to Internal Feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(feedname)'
